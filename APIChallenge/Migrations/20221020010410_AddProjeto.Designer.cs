// <auto-generated />
using System;
using APIChallenge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIChallenge.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20221020010410_AddProjeto")]
    partial class AddProjeto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("APIChallenge.Data.Empregado", b =>
                {
                    b.Property<int>("id_empregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("primeiro_nome")
                        .HasColumnType("longtext");

                    b.Property<int>("telefone")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("ultimo_nome")
                        .HasColumnType("longtext");

                    b.HasKey("id_empregado");

                    b.ToTable("Empregados");

                    b.HasData(
                        new
                        {
                            id_empregado = 1,
                            endereco = "joaoneivanetos@gmail.com",
                            primeiro_nome = "Joao",
                            telefone = 1111111111,
                            ultimo_nome = "Neto"
                        });
                });

            modelBuilder.Entity("APIChallenge.Data.Projeto", b =>
                {
                    b.Property<int>("id_projeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("data_de_criação")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("data_temino")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("gerente")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("id_projeto");

                    b.HasIndex("gerente");

                    b.ToTable("Projetos");

                    b.HasData(
                        new
                        {
                            id_projeto = 1,
                            data_de_criação = new DateTime(2022, 10, 19, 22, 4, 9, 777, DateTimeKind.Local).AddTicks(5715),
                            data_temino = new DateTime(2022, 10, 19, 22, 4, 9, 778, DateTimeKind.Local).AddTicks(5538),
                            gerente = 1,
                            nome = "Leonardo"
                        });
                });

            modelBuilder.Entity("APIChallenge.Data.Projeto", b =>
                {
                    b.HasOne("APIChallenge.Data.Empregado", "empregado")
                        .WithMany("projetos")
                        .HasForeignKey("gerente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empregado");
                });

            modelBuilder.Entity("APIChallenge.Data.Empregado", b =>
                {
                    b.Navigation("projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
